For add file to LOCAL repository: «git add <file>...» 
For commit: git commit -m "Note"
For download file to GitHub: git push
For sync GitHub with my local repository: git pull (it refresh info, files and commits)
For open work space: git gui

			How to undoing changes?

If file in directory:
	git checkout/restore file.txt (concrete file)
	git checkout . ("." meaning all files)
	git clean -xdf (delete untracked files(new files))

If file indexed:
	git restore --staged <file> or git reset HEAD <file>
	git gui: clic on staged file (it will be unstaged)

If I committed file:
	git reset HEAD^^ or HEAD~2 (for undo commit)
	git commit --amend -m "text" (for update commit)

If I push on repository:
	git revert <sha1> (also I can revert the revert)


			git reset
If I committed file:
	git rest --soft HEAD~ (it return me to commit stage)
	git reset --mixed HEAD~ (mixed by default) (it return me to index stage)
	git reset --hard HEAD~ 	(it return me to start stage, delete all unsync changes)

	
			.gitignore

It is home file, we can hide some files by enter name of file in it
	*.log (hide all log files)

			branch
For branching:
	git checkout -b name of branch (create and switch to new branch)
	git switch name of branch (switch to branch)

fast forward merge:
	git merge name of branch - if i have merge from last commit, HEAD from main branch 		replace to HEAD of branch commit

Non fast forward merge:
	git merge name of branch - if I have any commits in main branch and branch from previous 	commits. It create new HEAD commit 
			
				conflicts

If one file edited in different branches:
	if merge two branches with conflict file, it create new commit like in non f.f merge, 		but I need finally edit this file for solve conflict
	
Also I can abort merge:
	git merge --abort

Also I can approved my changes or another:
	git checkout --Xours(my changes) --Xtheirs(another changes)

				cherry-pick
This command can copy any commits at main branch to my branch


	